[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "q1simulator"
version = "0.18.0" # tbump: version
authors = [
  { name="Sander de Snoo", email="s.l.desnoo@tudelft.nl" },
]
description = """
Simulator for Q1ASM the assembly language of Qblox instruments.
The simulator can execute the programs for QCM and QRM modules
and plot the signals of the outputs.
"""
readme = "README.md"
license = "MIT"
license-files = [
    "LICENSE",
]
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]
dependencies = [
    "qcodes",
    "qblox_instruments",
    "numpy",
    "matplotlib",
    "qtpy",
    "pyqtgraph",
]

[project.urls]
# Homepage = "https://example.com"
Documentation = "https://github.com/sldesnoo-Delft/q1simulator/blob/main/README.md"
Repository = "https://github.com/sldesnoo-Delft/q1simulator"
# Issues = "https://github.com/me/spam/issues"
Changelog = "https://github.com/sldesnoo-Delft/q1simulator/blob/main/CHANGELOG.md"

[tool.setuptools]
packages = ["q1simulator"]

[tool.setuptools.package-data]
q1simulator = ["*.hdf5"]

[tool.tbump]
# Uncomment this if your project is hosted on GitHub:
# github_url = "https://github.com/<user or organization>/<project>/"

[tool.tbump.version]
current = "0.18.0"

# Example of a semver regexp.
# Make sure this matches current_version before
# using tbump
regex = '''
  (?P<major>\d+)
  \.
  (?P<minor>\d+)
  \.
  (?P<patch>\d+)
  '''

[tool.tbump.git]
message_template = "Bump to {new_version}"
tag_template = "v{new_version}"

# For each file to patch, add a [[tool.tbump.file]] config
# section containing the path of the file, relative to the
# tbump.toml location.
[[tool.tbump.file]]
src = "pyproject.toml"
search = 'version = "{current_version}" # tbump: version'

[[tool.tbump.file]]
src = "q1simulator/__init__.py"
search = '__version__ = "{current_version}"'

# You can specify a list of commands to
# run after the files have been patched
# and before the git commit is made

#  [[tool.tbump.before_commit]]
#  name = "check changelog"
#  cmd = "grep -q {new_version} Changelog.rst"

# Or run some commands after the git tag and the branch
# have been pushed:
#  [[tool.tbump.after_push]]
#  name = "publish"
#  cmd = "./publish.sh"
